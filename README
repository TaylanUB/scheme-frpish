FRP-alike module for Guile

- DAG from values to dependents, with back-links to dependencies, and
  expression; the expression referencing the dependencies.  Cache
  field holds calculated value, "tainted" flag indicates whether cache
  is up-to-date.

- Small example:

  <time>
  name: time
  expression: <primitive>
  back-links: ()
  dependents: (<yesterday>)
  cache: <some date>
  tainted: no

  <yesterday>
  name: yesterday
  expression: time - <one-day>
  back-links: ((time . <time>))
  dependents: ()
  cache: <some date>
  tainted: no

  ...

- Just use Scheme variables and you have your names and back-links in
  expressions for free.

- Tainting a value: sets the tainted flag, recursively taints
  dependents.

- Requesting a value: yields cached value if not tainted, otherwise
  recursively requests dependencies, then calculates, caches,
  de-taints, and returns the value.

- Triggering a value: calculates, caches, and de-taints value,
  triggers dependents.
